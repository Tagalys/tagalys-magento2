<?php if ($this->isTagalysEnabled()): ?>
    <?php
        $currency = $this->getCurrentCurrency();
        $apiCredentials = $this->apiCredentials();
        $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
        $urlInterface = $objectManager->create('\Magento\Framework\UrlInterface');
        $urlEncoder = $objectManager->create('\Magento\Framework\Url\EncoderInterface');
        $uenc = $urlEncoder->encode($urlInterface->getCurrentUrl());
        $formKey = $objectManager->get('Magento\Framework\Data\Form\FormKey')->getFormKey();
    ?>
    <script src="https://storage.googleapis.com/tagalys-front-end-components/tagalys-ui-widgets-2.0.0-beta2.min.js" defer></script>
    <script>
        var TagalysCustomisations = TagalysCustomisations || {};
        TagalysCustomisations.variables = {
            uenc: "<?php echo $uenc ?>",
            formKey: "<?php echo $formKey ?>"
        };
        TagalysCustomisations.Utils = {}
        TagalysCustomisations.Utils.ajax = function (params) {
            var xhr = new XMLHttpRequest();
            xhr.open(params.method, params.url);
            xhr.setRequestHeader('Content-Type', params.contentType);
            xhr.onload = function() {
                if (xhr.status === 200) {
                    params.success(xhr.responseText, params.includeInCallbacks)
                } else {
                    if(typeof(params.failure) != 'undefined') {
                        params.failure(xhr, params.includeInCallbacks);
                    }
                }
            };
            xhr.onerror = function() {
                if(typeof(params.failure) != 'undefined') {
                    params.failure(xhr, params.includeInCallbacks);
                }
            }
            xhr.send(params.data);
        };
        function setTagalysConfiguration() {
            Tagalys.setConfiguration({
                api: {
                    serverUrl: "<?php echo $apiCredentials['api_server'] ?>",
                    credentials: {
                        clientCode: "<?php echo $apiCredentials['client_code'] ?>",
                        apiKey: "<?php echo $apiCredentials['public_api_key'] ?>",
                    },
                    storeId: "<?php echo $this->getCurrentStoreId() ?>",
                },
                locale: "en-US",
                currency: {
                    displayFormatter: "{{currencyLabel}} {{value}}", // or function(formattedNumber) { return formattedNumberWithCurrencyLabel }
                    code: "<?php echo $currency['id']; ?>", // USD / AUD ...
                    label: "<?php echo $currency['label']; ?>", // $, Â£
                    fractionalDigits: "<?php echo  $currency['fractional_digits']; ?>", // round to nearest decimal
                    forceFractionalDigits: false, // Forces the number to have the given fractional digits. (ex: 10 -> 10.00)
                    exchangeRate: <?php echo  $currency['exchange_rate']; ?>, // compared to product's base currency
                },
                analyticsStorageConsentProvided: function () {
                    // return true/false based on user's consent settings
                    return true;
                },
                track: true,
            });
        }
        
        function setPlatformConfigurationForTagalys() {
            Tagalys.setPlatformConfiguration({
                platform: "Magento"
            });
        }
        
        function onTagalysReady(callback) {
            if (window.Tagalys) {
                setTagalysConfiguration();
                setPlatformConfigurationForTagalys();
                callback();
            } else {
                window.addEventListener("DOMContentLoaded", function () {
                    setTagalysConfiguration();
                    setPlatformConfigurationForTagalys();
                    callback();
                });
            }
        }
    </script>
<?php endif; ?>